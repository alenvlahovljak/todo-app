name: CI/CD

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Please enter the reason for the manual build:'
        required: true
        default: 'Additional test...'
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        node-version: [ 16.x ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}
          cache: 'yarn'

      - name: Install dependencies
        run: |
          echo "YARN CACHE CHANGED"
          yarn --prefer-offline
        if: |
          steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.cache-node-modules.outputs.cache-hit != 'true'

      - name: Run ESLint
        run: yarn type-check

      - name: Test
        run: yarn test


  build:
    runs-on: ubuntu-20.04
    needs: test

    strategy:
      matrix:
        node-version: [ 16.x ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}
          cache: 'yarn'

      - name: Install dependencies
        run: |
          echo "YARN CACHE CHANGED"
          yarn --prefer-offline
        if: |
          steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.cache-node-modules.outputs.cache-hit != 'true'

      - name: Build
        run: yarn build

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v

      - name: Build image
        run: docker build . --file Dockerfile --tag todo-app --label "runnumber=${GITHUB_RUN_ID}"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/todo-app
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag todo-app $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
